exports[`eslint-config-marlint block offending rule 1`] = `
Array [
  Object {
    "column": 16,
    "line": 10,
    "ruleId": "babel/flow-object-type",
    "severity": 2,
    "source": "  hello: string;"
  },
  Object {
    "column": 10,
    "line": 11,
    "ruleId": "react/no-unused-prop-types",
    "severity": 1,
    "source": "  world: string"
  },
  Object {
    "column": 24,
    "line": 14,
    "ruleId": "arrow-body-style",
    "severity": 1,
    "source": "const parens = args => {"
  },
  Object {
    "column": 10,
    "line": 17,
    "ruleId": "react/react-in-jsx-scope",
    "severity": 2,
    "source": "  return <div>{args}</div>;"
  },
  Object {
    "column": 7,
    "line": 22,
    "ruleId": "no-unused-vars",
    "severity": 2,
    "source": "const Unused = (props: UnusedProps) => {"
  },
  Object {
    "column": 3,
    "line": 26,
    "ruleId": "no-unused-expressions",
    "severity": 2,
    "source": "  <h1>{\`It works ${props.text}\`}</h1>;"
  },
  Object {
    "column": 3,
    "line": 26,
    "ruleId": "react/react-in-jsx-scope",
    "severity": 2,
    "source": "  <h1>{\`It works ${props.text}\`}</h1>;"
  },
  Object {
    "column": 1,
    "line": 31,
    "ruleId": "react/no-multi-comp",
    "severity": 2,
    "source": "class Block extends React.Component {"
  },
  Object {
    "column": 21,
    "line": 31,
    "ruleId": "no-undef",
    "severity": 2,
    "source": "class Block extends React.Component {"
  },
  Object {
    "column": 13,
    "line": 35,
    "ruleId": "babel/arrow-parens",
    "severity": 1,
    "source": "  onClick = (e) => {"
  },
  Object {
    "column": 20,
    "line": 35,
    "ruleId": "no-empty-function",
    "severity": 2,
    "source": "  onClick = (e) => {"
  },
  Object {
    "column": 7,
    "line": 45,
    "ruleId": "jsx-a11y/onclick-has-role",
    "severity": 1,
    "source": "      <div className=\"as\" onClick={this.onClick}>"
  },
  Object {
    "column": 7,
    "line": 45,
    "ruleId": "jsx-a11y/onclick-has-focus",
    "severity": 1,
    "source": "      <div className=\"as\" onClick={this.onClick}>"
  },
  Object {
    "column": 7,
    "line": 45,
    "ruleId": "react/react-in-jsx-scope",
    "severity": 2,
    "source": "      <div className=\"as\" onClick={this.onClick}>"
  },
  Object {
    "column": 22,
    "line": 45,
    "ruleId": "jsx-quotes",
    "severity": 2,
    "source": "      <div className=\"as\" onClick={this.onClick}>"
  },
  Object {
    "column": 27,
    "line": 45,
    "ruleId": "react/jsx-handler-names",
    "severity": 2,
    "source": "      <div className=\"as\" onClick={this.onClick}>"
  },
  Object {
    "column": 1,
    "line": 53,
    "ruleId": "no-var",
    "severity": 2,
    "source": "var text: string = \'random\';"
  },
  Object {
    "column": 5,
    "line": 57,
    "ruleId": "prefer-const",
    "severity": 2,
    "source": "let x = {"
  },
  Object {
    "column": 3,
    "line": 60,
    "ruleId": "babel/object-shorthand",
    "severity": 1,
    "source": "  text: text"
  },
  Object {
    "column": 13,
    "line": 60,
    "ruleId": "comma-dangle",
    "severity": 1,
    "source": "  text: text"
  },
  Object {
    "column": 3,
    "line": 68,
    "ruleId": "prefer-arrow-callback",
    "severity": 2,
    "source": "  function (req, res, next) {"
  },
  Object {
    "column": 3,
    "line": 68,
    "ruleId": "func-names",
    "severity": 2,
    "source": "  function (req, res, next) {"
  },
  Object {
    "column": 12,
    "line": 70,
    "ruleId": "react/react-in-jsx-scope",
    "severity": 2,
    "source": "    render(<Block hello={myText} {...rest} />);"
  },
  Object {
    "column": 3,
    "line": 72,
    "ruleId": "babel/arrow-parens",
    "severity": 1,
    "source": "  (cb) => {"
  },
  Object {
    "column": 1,
    "line": 86,
    "ruleId": "no-console",
    "severity": 2,
    "source": "console.log(\"testing\" + x.text + \'asd\')"
  },
  Object {
    "column": 13,
    "line": 86,
    "ruleId": "prefer-template",
    "severity": 1,
    "source": "console.log(\"testing\" + x.text + \'asd\')"
  },
  Object {
    "column": 13,
    "line": 86,
    "ruleId": "quotes",
    "severity": 2,
    "source": "console.log(\"testing\" + x.text + \'asd\')"
  },
  Object {
    "column": 40,
    "line": 86,
    "ruleId": "semi",
    "severity": 2,
    "source": "console.log(\"testing\" + x.text + \'asd\')"
  }
]
`;
